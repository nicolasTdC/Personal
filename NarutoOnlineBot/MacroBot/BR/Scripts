import time
import os 
import datetime
import pyautogui
import UserConfigs as UC
os. chdir(UC.filePath)
import GeneralActions as GA
import DailyScript as DS
import ConvoyPlunder as CP
import Dicts as DICTS
import eventosCheck as eC
import TeamInstance as TI
import Mitsuri as Mitsuri

#pyautogui.PAUSE = 3

    #%%DISABLE INVITE
    
time.sleep(3)

GA.mouseClick(GA.imgFind('CreateTeam.png'))  
     
ans1 = GA.imgFind('TeamMenuCheck.png')
     
if ans1 is not None:
    GA.mouseClick(ans1)
    

ans2= GA.imgFind('TeamMenuCheck2.png')
     
if ans2 is not None:
    GA.mouseClick(ans2)     

pyautogui.press('esc')
#%%
dt = datetime.datetime.now()
WeekDay = dt.strftime('%A')

'''
if WeekDay != 'Monday':
    sapinho = True
'''
#else:
sapinho = False

Convoy = eC.checkConvoy()

time.sleep(2)

Dono = UC.Dono

RichField=eC.checkRichField()
faseRichField = DICTS.RichField[UC.faseRichField] 

time.sleep(2)

Roleta=UC.Roleta

CheckIn=eC.checkDailyPractice('checkSignIn1.png','checkSignIn2.png')

time.sleep(2)

Recruit = UC.Recruit

NinjaExam = eC.checkDailyPractice('checkNinjaExam1.png','checkNinjaExam2.png')

time.sleep(2)

LuckyRunes = UC.LuckyRunes

SurvivalTrial=eC.checkDailyPractice('checkSurvivalTrial1.png','checkSurvivalTrial2.png')
ptsSurvivalTrial = UC.pointsSurvivalTrial
  
time.sleep(2)

ExpTreasure=eC.checkExpTreasure()
faseExpTreasure = DICTS.ExpTreasure[UC.faseExpTreasure]

time.sleep(2)

NinjaTest= eC.checkDailyPractice('checkNinjaTest1.png','checkNinjaTest2.png')
#%%
time.sleep(2)

TeamInstance = eC.checkTI()
faseTI= DICTS.TeamInstances[UC.faseTI]
difTI = DICTS.TeamInstances[UC.difTI]

Matsuri1 = UC.Matsuri
Matsuri2 = UC.Matsuri2

time.sleep(2)

Arena=UC.Arena

onsenFlag = False

NineTails = UC.NineTails

cave =False

freeSummon = False
#%%
e = datetime.datetime.now()
hora = e.hour
minutes=e.minute


start = hora*60+minutes

pars = (Convoy,Dono,RichField,Roleta,CheckIn,Recruit,NinjaExam,LuckyRunes,SurvivalTrial,ExpTreasure,NinjaTest,Arena,start,TeamInstance,faseTI,difTI,faseExpTreasure,sapinho,faseRichField,WeekDay,Matsuri1,Matsuri2,onsenFlag ,NineTails,cave,freeSummon)


def main(pars):
    ###
    
    Convoy,Dono,RichField,Roleta,CheckIn,Recruit,NinjaExam,LuckyRunes,SurvivalTrial,ExpTreasure,NinjaTest,Arena,start,TeamInstance,faseTI,difTI,faseExpTreasure,sapinho,faseRichField,WeekDay,Matsuri1,Matsuri2,onsenFlag ,NineTails,cave,freeSummon = pars[0],pars[1],pars[2],pars[3],pars[4],pars[5],pars[6],pars[7],pars[8],pars[9],pars[10],pars[11],pars[12],pars[13],pars[14],pars[15],pars[16],pars[17],pars[18],pars[19],pars[20],pars[21],pars[22] ,pars[23],pars[24],pars[25]
    
    ###


    #%%#Free Treasures (Done for: Bond, Seal)
    if Recruit != 'True':
        time.sleep(4)
        DS.recruit(2)
        
        GA.replaceConfigs(Recruit, 'True')
        Recruit = 'True'
    
    #%%NinjaExam (ok)
    if NinjaExam == False:
        time.sleep(4)
        DS.NinjaExam()
        NinjaExam = True
    #%%lucky runes
    if LuckyRunes != 'True':
        time.sleep(3)
        DS.LuckyRunes()
        GA.replaceConfigs(LuckyRunes, 'True')
        LuckyRunes = 'True'
        
    #%%#Guild DONO (DONE)
    if Dono != 'True':
        time.sleep(2)
        DS.GuildDono(Dono)
        GA.replaceConfigs(Dono, 'True')
        Dono = True
    
    #%%#Rich Field (ok)
    if RichField == False:
        time.sleep(4)
        DS.RichField(faseRichField) #easy pos
        DS.RichField(faseRichField)      
        RichField=True 
    #%%Guild Roleta (ok)
    if Roleta != 'True':
        time.sleep(4)
        
        DS.Roleta(6)
        
        GA.replaceConfigs(Roleta, 'True')
        Roleta = 'True'
     
    #%%Survival (em progresso / teste)
    
    if SurvivalTrial==False:
        time.sleep(4)
        DS.SurvivalTrial(ptsSurvivalTrial)
    
    #%%NinjaTest (ok)
    time.sleep(2)
    if NinjaTest==False:
        #DS.NinjaTest()
        NinjaTest=True
    #%%ilusao(teste)

   # DS.ilusao()
    #%%
    time.sleep(1)
    
    if cave is not True:
    
       cave=  DS.cave()
    #%%
    if freeSummon is not True:
    
        freeSummon = DS.freeSummon()
    #%%Timed Events
    hora = GA.checkHour()
    minutos = datetime.datetime.now().minute
    dt = datetime.datetime.now()
    WeekDay = dt.strftime('%A')
#%%    
    if ( (hora <16) and (hora >= 13) ) or ((hora <23) and (hora >= 20) ):
    
        if Convoy == False: #Convoy (TESTE)
            
            first=True
        
            CP.Convoy(first)
            
            Convoy == True
            #%%
    
    if ( (hora <16) and (hora >= 12) ) or ((hora <24) and (hora >= 20) ):
        if TeamInstance == False: #TI (TESTE)
        
            TI.TeamInstance(faseTI,difTI)
            
            TeamInstance = True
    
    #%%bds
    if (WeekDay == 'Tuesday') or (WeekDay == 'Thursday') or (WeekDay == 'Sunday'):
        DS.bds(hora,minutos)
    #%%gato
    if (WeekDay == 'Thursday')    :
        DS.gato(hora,minutos)
        
    #%%matsuri arena (teste)
    
    if WeekDay == 'Sunday':
        if  ( (hora <20) and (hora >= 17) ):
            if Matsuri1 != 'True':
                Matsuri1 = eC.checkMatsuri()

                if Matsuri1 is False:                   
                    Mitsuri.Mitsuri('MatsiruCheck1.png','MatsiruCheck2.png',1)
                    GA.replaceConfigs(Matsuri, 'True')
                    Matsuri1 = 'True'
        
    #%%matsuri normal (teste)
    
    if (WeekDay == 'Monday') or (WeekDay == 'Friday') :
        if  ( (hora <24) and (hora >= 21) ):
            
            if Matsuri2 != 'True':
                Matsuri2 = eC.checkMatsuri2()

                if Matsuri2 is False:                   
                    Mitsuri.Mitsuri('Matsuri2Check1.png','Matsuri2Check2.png',2)
                    GA.replaceConfigs(Matsuri2, 'True')
                    Matsuri2 = 'True'
    
    #%%
    time.sleep(1)
    if WeekDay == ('Sunday') or WeekDay == ('Monday') or WeekDay == ('Tuesday') or WeekDay == ('Friday'):
        
        #NineTails (teste)
        if  ( (hora <23) and ( (hora >= 22) and (minutos >= 10) )) :
            if NineTails != 'True': 
            
                 GA.entrarEvento('NineTails1.png','NineTails2.png')
                 
                 GA.mouseClick(GA.imgFind('Participation.png'))   

                 ans = GA.imgFind('KuramaHokageSupport.png')
                 while ans is None:
                     ans = GA.imgFind('KuramaHokageSupport.png')

                 #troca comp
                 for _ in range(3):
                     GA.mouseClick((808,235))
                     time.sleep(2)
                    
                 GA.mouseClick(GA.imgFind('NinjaMenu.png'))           
                 
                 time.sleep(2)
                 
                 GA.mouseClick((546,268))
                 
                 time.sleep(2)
                 pyautogui.press('esc')
                 ##
                 
                 time.sleep(2)
                 pyautogui.moveTo(889,301)
                 time.sleep(2)
                 GA.mouseClick((889,301))
                 
                
                 ans = GA.imgFind('KuramaHokageSupport.png')
                 while ans is not None:
                     ans = GA.imgFind('KuramaHokageSupport.png')
                 
                 time.sleep(5)
                 
                 ans = GA.imgFind('KuramaHokageSupport.png')
                 while ans is None:
                     ans = GA.imgFind('KuramaHokageSupport.png')
                    
                    
                 pyautogui.moveTo(889,301)
                 time.sleep(2)
                 GA.mouseClick((889,301))
                 time.sleep(2)
                 pyautogui.moveTo(889,301)
                 time.sleep(2)
                 GA.mouseClick((889,301))
                 
                 time.sleep(30)
                 
                 ans = GA.imgFind('KuramaHokageSupport.png')
                 while ans is None:
                     ans = GA.imgFind('KuramaHokageSupport.png')
                  
                 GA.mouseClick(GA.imgFind('NinjaMenu.png'))           
                 
                 time.sleep(2)
                 
                 pyautogui.moveTo(546,239)
                 GA.mouseClick((546,239))
                 
                 time.sleep(2)
                 
                 pyautogui.press('esc')
                                  
                 time.sleep(2)
                    
                 if WeekDay != 'Monday':
                    os.system('shutdown /s /t 1')
    
                 else:
                     GA.mouseClick(GA.mouseClick((1905,100)))
                     GA.replaceConfigs(NineTails, 'True')
                     NineTails = 'True'
            
    ##%GGN
     
    if WeekDay == ('Wednesday') or WeekDay == ('Saturday'):
        
        if ( (hora >= 21) and (minutos >= 31) ) :
        
            DS.ggn()
            GA.mouseClick(GA.mouseClick((1905,100)))
            while ( (hora < 22) or (minutos <16) ):
                hora = GA.checkHour()
                minutos = datetime.datetime.now().minute
            DS.ggn()
            
            time.sleep(10)
            os.system('shutdown /s /t 1')
    
            
    #%%Arena
    if Arena == True:
        time.sleep(2)
    
        DS.EnterArena()
        time.sleep(2)
        DS.ArenaLoop(1)#numero de runs
    #%%CheckIn (DONE)
    onlineTime = datetime.datetime.now()
    onlineTimeCheck= onlineTime.hour*60+onlineTime.minute
    
    
    if (CheckIn==False) and ( (onlineTimeCheck - start) >=60 ):
        time.sleep(4)
        
        DS.checkIn()
        CheckIn=True
    
    #%%OnlinePack (DONE)
        time.sleep(4)
        
        DS.OnlinePack()
    #%%ExpTreasure  (teste)
    '''
    if ExpTreasure == False:
        time.sleep(2)
        DS.ExpTreasure(faseExpTreasure)
        ExpTreasure=True
    '''
    #%%Sapinho (teste para dobro)
    if sapinho == True:
        
        sapinho = DS.sapinho()
        
    if (WeekDay == 'Tuesday') and ((hora >= 2) and minutos >= 5) and (hora <7):
        sapinho = DS.sapinho()
        time.sleep(2)
        os.system('shutdown /s /t 1')
        
    time.sleep(3)
    
    #%%onsen
    time.sleep(1)
    if onsenFlag == False:
        onsenFlag = DS.onsen()
    
    return (Convoy,Dono,RichField,Roleta,CheckIn,Recruit,NinjaExam,LuckyRunes,SurvivalTrial,ExpTreasure,NinjaTest,Arena,start,TeamInstance,faseTI,difTI,faseExpTreasure,sapinho,faseRichField,WeekDay,Matsuri1,Matsuri2,onsenFlag ,NineTails,cave,freeSummon)
    
#%%
while __name__== '__main__':
    
    
    pars = main(pars)
    #Convoy,Dono,RichField,Roleta,CheckIn,NinjaExam,LuckyRunes,SurvivalTrial,ExpTreasure,NinjaTest,Arena,TeamInstance,faseExpTreasure ,sapinho,WeekDay,Matsuri1,Matsuri2,onsenFlag,NineTails,cave,freeSummon=res[0],res[1],res[2],res[3],res[4],res[5],res[6],res[7],res[8],res[9],res[10],res[11],res[12],res[13],res[14],res[15],res[16],res[17],res[18],res[19],res[12],res[13],res[14],res[15],res[16]
    
    
#%%

import time
import os
import pyautogui
import UserConfigs as UC
os. chdir(UC.filePath)
import GeneralActions as GA


def Mitsuri(img1,img2,nbr):
    time.sleep(2)
    GA.entrarEvento(img1,img2)
    
    GA.mouseClick(GA.imgFind('Participation.png'))    
    
    time.sleep(2)
    
    signUp = GA.imgFind('MitsuriSignUp.png')
    GA.mouseClick(signUp)

    if signUp is None:
        signUp = GA.imgFind('MitsuriRegister.png')
        GA.mouseClick(signUp)
        
    time.sleep(2)
      
    GA.mouseClick(628, 507)

    time.sleep(1)
    
    GA.mouseClick(765, 507)

    time.sleep(1)
    
    GA.mouseClick(943, 507)

    time.sleep(1)
    
    GA.mouseClick(1112, 507)

    time.sleep(1)
    
    GA.mouseClick(1267, 507)

    time.sleep(1)
    
    GA.mouseClick(628, 578)

    time.sleep(1)
    
    GA.mouseClick(765, 578)

    time.sleep(1)
    
    GA.mouseClick(943, 578)

    time.sleep(1)
    
    GA.mouseClick(1112, 578)

    time.sleep(1)
    
    GA.mouseClick(1267, 578)

    time.sleep(1)
    
    GA.mouseClick(628, 653)

    time.sleep(1)
    
    GA.mouseClick(765, 653)

    time.sleep(1)
    
    GA.mouseClick(943, 653)

    time.sleep(1)
    
    GA.mouseClick(1112, 653)

    time.sleep(1)
    
    GA.mouseClick(1267, 653)

    time.sleep(1)
    
    GA.mouseClick((978,813))
    
    time.sleep(3)
    
    for _ in range(3):
        flag = MitsuriFight(nbr)
        if flag == True:
            return True
        
    ans = GA.imgFind('MatsuriConfirm.png')
    
    while ans is None:
        ans = GA.imgFind('MatsuriConfirm.png')
    
    GA.mouseClick(ans)
    
    ans = GA.imgFind('MatsuriConfirm2.png')
    
    while ans is None:
        ans = GA.imgFind('MatsuriConfirm2.png')
    
    GA.mouseClick(ans)
    
    
def MitsuriFight(nbr):
    
    time.sleep(5)
    if nbr ==1:
        pyautogui.mouseDown(368,372)
        time.sleep(1)    
        pyautogui.moveTo(715,511)
        time.sleep(1)  
        pyautogui.mouseUp()
    
        time.sleep(1)
        
        pyautogui.mouseDown(368,448)
        time.sleep(1)
        pyautogui.moveTo(715,568)
        time.sleep(1)  
        pyautogui.mouseUp()
    
        time.sleep(1)
        
        pyautogui.mouseDown(368,526)
        time.sleep(1)
        pyautogui.moveTo(715,653)
        time.sleep(1)  
        pyautogui.mouseUp()
    
        time.sleep(1)
        
        pyautogui.mouseDown(368,620)
        time.sleep(1)
        pyautogui.moveTo(837,568)
        time.sleep(1)  
        pyautogui.mouseUp()
    
        time.sleep(1)
        
        GA.mouseClick(GA.imgFind('MitsuriBattle.png'))
        
        time.sleep(60)
        
        cancel = GA.imgFind('MatsuriCancel.png')
        if cancel is not None:
            return True
        
    
    if nbr ==2:
        pyautogui.mouseDown(368,372)
        time.sleep(1)    
        pyautogui.moveTo(699,532)
        time.sleep(1)  
        pyautogui.mouseUp()
    
        time.sleep(1)
        
        pyautogui.mouseDown(368,448)
        time.sleep(1)
        pyautogui.moveTo(699,598)
        time.sleep(1)  
        pyautogui.mouseUp()
    
        time.sleep(1)
        
        pyautogui.mouseDown(368,526)
        time.sleep(1)
        pyautogui.moveTo(699,673)
        time.sleep(1)  
        pyautogui.mouseUp()
    
        time.sleep(1)
        
        pyautogui.mouseDown(368,620)
        time.sleep(1)
        pyautogui.moveTo(824,600)
        time.sleep(1)  
        pyautogui.mouseUp()
    
        time.sleep(1)
        
        GA.mouseClick((819,862))
        
        time.sleep(60)
        
        cancel = GA.imgFind('MatsuriCancel.png')
        if cancel is not None:
            return True
    
    ans1 = GA.imgFind('ConfirmDefeat.png')
    ans2= GA.imgFind('PlunderConfirmWin.png')
    
    while (ans1 is None) and (ans2 is None):
        ans1 = GA.imgFind('ConfirmDefeat.png')
        ans2= GA.imgFind('PlunderConfirmWin.png')
        GA.Auto2x()
    
    if ans1 is not None:
        
        GA.mouseClick(ans1)
        
    if ans2 is not None:
        
        GA.mouseClick(ans2)



    #%%
import time
import os
import pyautogui
import UserConfigs as UC
os. chdir(UC.filePath)
import GeneralActions as GA


def TeamInstance(posSeta,vezesSeta): #primeiras 4 por enquanto

    
    
    ##EM TIME MAS EH INCONSISTENTE
    
    ''' 
    
     GA.mouseClick(GA.imgFind('CreateTeam.png'))  
    
     time.sleep(3)
     GA.mouseClick(GA.imgFind('TeamInstanceCreate.png'))
     time.sleep(2)
     GA.mouseClick(GA.imgFind('CreateTeamMenuCreateTeam.png'))
     time.sleep(2)
     GA.mouseClick((978,571))
     time.sleep(2)
     pyautogui.hotkey('ctrl', 'a')
     
     time.sleep(2)
     pyautogui.press('backspace')        
     time.sleep(2)
     
     GA.write('AJUDA FG / HELP TI')
     time.sleep(2)
    
     GA.mouseClick(GA.imgFind('CreateTeamMenuCreate.png'))
     time.sleep(2)
     GA.mouseClick(GA.imgFind('CreateTeam.png')) 
     time.sleep(2)
     GA.mouseClick(GA.imgFind('TeamInvite.png')) 
     
     time.sleep(2)
     
     GA.mouseClick((944,524))
     time.sleep(2)
     pyautogui.hotkey('ctrl', 'a')
     
     time.sleep(2)
     pyautogui.press('backspace')        
     time.sleep(2)
     
     GA.write('AJUDA FG / HELP TI ; CLICK >>')
     time.sleep(2)
     
     GA.mouseClick(GA.imgFind('SendTeamInvite.png'))#pra guilda
     time.sleep(2)
       
     GA.mouseClick(GA.imgFind('CreateTeam.png'))  
     time.sleep(2)
    
     ans=GA.imgFind('TeamEmptySlot.png')
     for _ in range(10):
         ans=GA.imgFind('TeamEmptySlot.png')
         time.sleep(10)
         if ans is None:
             Time=True
             break
     if Time==True:
        
        pyautogui.press('esc') 
        
        ready = GA.entrarEvento('TeamInstanceSelect1.png','TeamInstanceSelect2.png')
        
        time.sleep(4)
        
        GA.mouseClick(GA.imgFind('Participation.png'))   
        
        time.sleep(4)
    
        GA.mouseClick(lvl)
        
        time.sleep(6)
        
        GA.Auto2x()
        #%%
    '''
    
    #solo
    
    GA.entrarEvento('TeamInstanceSelect1.png','TeamInstanceSelect2.png')
    
    time.sleep(2)
    
    GA.mouseClick(GA.imgFind('Participation.png'))   
    
    time.sleep(4)
    
    ans = GA.imgFind('TIfailsafe.png')
    if ans is not None:
        pyautogui.press('esc')
        return True
    
    for _ in range(5):
        
        ans = GA.imgFind('TeamInstanceAll.png')

        while ans is None:
            
            ans = GA.imgFind('TeamInstanceAll.png')
        
        GA.mouseClick(ans)
        
        time.sleep(1)
        
        pyautogui.moveTo(posSeta)
        
        for _ in range(vezesSeta):
            time.sleep(1)
            pyautogui.mouseDown()
            time.sleep(0.05)
            pyautogui.mouseUp()
        
        pyautogui.moveRel(0,454-539)
        
        time.sleep(1)
        pyautogui.mouseDown()
        time.sleep(0.05)
        pyautogui.mouseUp()
        
        ans = GA.imgFind('TeamInstanceConfirmEntry.png')
        
        while ans is None:
            ans = GA.imgFind('TeamInstanceConfirmEntry.png')
        
        GA.mouseClick(ans)
        
        ans = GA.imgFind('TeamInstanceReturn.png')
        while ans is None:
            GA.Auto2x()
            ans = GA.imgFind('TeamInstanceReturn.png')
        GA.mouseClick(ans)
    
    pyautogui.press('esc')

import time
import os 
import datetime
import pyautogui
import UserConfigs as UC
os. chdir(UC.filePath)
import GeneralActions as GA
import DailyScript as DS
import ConvoyPlunder as CP
import Dicts as DICTS
import eventosCheck as eC
import TeamInstance as TI
import Mitsuri as Mitsuri

#%%
time.sleep(4)
#autoclick pra fase de elite
'''
while True:
    time.sleep(3)
    pyautogui.click(826,810)
'''    
'''
#autoclick pra fase de elite laucher lite
while True:
    time.sleep(3)
    pyautogui.click(851,832)
'''   
#kurama
'''
flag=True
while flag is True:

    hora = GA.checkHour()
    minutos = datetime.datetime.now().minute




    if  ( (hora <23) and ( (hora >= 22) and (minutos >= 10) )) :

     GA.entrarEvento('NineTails1.png','NineTails2.png')
     
     GA.mouseClick(GA.imgFind('Participation.png'))   

     ans = GA.imgFind('KuramaHokageSupport.png')
     while ans is None:
         ans = GA.imgFind('KuramaHokageSupport.png')

     #troca comp
     for _ in range(3):
         GA.mouseClick((808,235))
         time.sleep(2)
        
     GA.mouseClick(GA.imgFind('NinjaMenu.png'))           
     
     time.sleep(2)
     
     GA.mouseClick((546,268))
     
     time.sleep(2)
     pyautogui.press('esc')
     ##
     
     time.sleep(2)
     pyautogui.moveTo(889,301)
     time.sleep(2)
     GA.mouseClick((889,301))
     

     ans = GA.imgFind('KuramaHokageSupport.png')
     while ans is not None:
         ans = GA.imgFind('KuramaHokageSupport.png')
     
     
     ans = GA.imgFind('KuramaHokageSupport.png')
     while ans is None:
         ans = GA.imgFind('KuramaHokageSupport.png')
        
        
     pyautogui.moveTo(889,301)
     time.sleep(2)
     GA.mouseClick((889,301))
     time.sleep(2)
     pyautogui.moveTo(889,301)
     time.sleep(2)
     GA.mouseClick((889,301))
     
     time.sleep(30)
     
     ans = GA.imgFind('KuramaHokageSupport.png')
     while ans is None:
         ans = GA.imgFind('KuramaHokageSupport.png')
      
     GA.mouseClick(GA.imgFind('NinjaMenu.png'))           
     
     time.sleep(2)
     
     GA.mouseClick((546,239))
     
     time.sleep(2)
     
     pyautogui.press('esc')
                      
     time.sleep(2)
        

     os.system('shutdown /s /t 1')


'''
#repetir TI
'''

while True:
    time.sleep(5)
    pyautogui.click(741,657)
    ans = GA.imgFind('TeamInstanceReturn.png')
    while ans is None:
        GA.Auto2x()
        ans = GA.imgFind('TeamInstanceReturn.png')
    GA.mouseClick(ans)
'''
#autoclick pra treino max
'''

while True:
    time.sleep(3)
    pyautogui.click(917,671)
'''

#autoclick pra treino max lite


while True:
    time.sleep(3)
    pyautogui.click(917+25,671+25)


#arena
'''
DS.ArenaLoop(100)
#os.system('shutdown /s /t 1')
''' 

#autoclick pra teste shinobi
'''
while True:
    time.sleep(3)
    pyautogui.click(893,651)
'''

#autoclick pra presente
'''
flag=True
while flag is True:
    try:
        pyautogui.click(152,951)
    except KeyboardInterrupt:
        flag=False
'''

#sapinho meia noite 
'''
flag=True
while flag is True:
    hora = GA.checkHour()
    minutos = datetime.datetime.now().minute

    if  ( (hora == 0) and (minutos >= 5) ) :
        DS.sapinho()
        flag=False 
        
os.system('shutdown /s /t 300')
'''

'''
#tesouro xp lvl 50
fase = (861,394)
DS.ExpTreasure(fase)

os.system('shutdown /s /t 300')
'''




####

filePath = r'C:\Users\accam\Desktop\NarutoOnline\NarutoOnlineBot\BR'

#eventos True se ainda precisa fazer

#arena True se quiser que faca

#Convoy = True

Dono = 'True' #valor de ryos

#RichField=True
faseRichField = 'Normal'

Roleta='True' 

#CheckIn=True

Recruit = 'True'

#NinjaExam = True

LuckyRunes = 'True'
 
#SurvivalTrial=True
pointsSurvivalTrial = 130  


#ExpTreasure=True
faseExpTreasure = 'Sakura'


#NinjaTest= True

Matsuri='True'
Matsuri2='True'

##
NineTails = 'False'

#TeamInstance = True
faseTI= 'Gaara'
difTI = 'Easy'


Arena=False

#%%

import time
import os 
import pyautogui
import UserConfigs as UC
os. chdir(UC.filePath)
import GeneralActions as GA

def convoyLoop(rank,flagSS):
    ans = GA.imgFind(rank)
    rep = GA.imgFind('ConvoyRepetido.png')
    if (ans is None)  or ( rep is not None):
        GA.mouseClick(GA.imgFind('ConvoyRefresh.png')) 
        time.sleep(5)
        convoyLoop(rank,flagSS)
    else:
        pyautogui.moveTo(ans)
        time.sleep(2)
        pyautogui.moveRel(1250-668,0)
        pyautogui.mouseDown()
        time.sleep(1)
        pyautogui.mouseUp()
       # GA.mouseClick(GA.imgFind('ConvoyClaim.png')) 
        time.sleep(2)
        for _ in range (0,3):
            GA.mouseClick(GA.imgFind('ConvoySupport.png')) 
            time.sleep(2)
        time.sleep(15)
        GA.mouseClick(GA.imgFind('ConvoySetOff.png')) 
        
        ans = GA.imgFind('ConvoyFinishConfirm.png')
        while ans is None:
            
            GA.Auto2x()  
            
            plunderWin = GA.imgFind('PlunderConfirmWin.png')
            plunderLoss = GA.imgFind('PlunderConfirmLoss.png')
            
            if plunderWin is not None:
                
                GA.mouseClick (plunderWin)
                
                time.sleep(5)
                
                GA.entrarEvento('ConvoyPlunderSelect1.png','ConvoyPlunderSelect2.png')
                GA.mouseClick(GA.imgFind('Participation.png'))    
                ans = GA.imgFind('ConvoySetOff2.png')
                while ans is None:
                    ans = GA.imgFind('ConvoySetOff2.png')
                GA.mouseClick(ans)
                
                
            
            if plunderLoss is not None:
                
                GA.mouseClick (plunderLoss) 
                time.sleep(5)
                
                GA.entrarEvento('ConvoyPlunderSelect1.png','ConvoyPlunderSelect2.png')
                GA.mouseClick(GA.imgFind('Participation.png'))    
                ans = GA.imgFind('ConvoySetOff2.png')
                while ans is None:
                    ans = GA.imgFind('ConvoySetOff2.png')
                GA.mouseClick(ans)                 
            
            ans = GA.imgFind('ConvoyFinishConfirm.png')
            
            
        GA.mouseClick(ans)
        

def Convoy(first):

    ready = GA.entrarEvento('ConvoyPlunderSelect1.png','ConvoyPlunderSelect2.png')
    
    time.sleep(2)
    if ready is not None:
        
        GA.mouseClick(GA.imgFind('Participation.png'))    
        time.sleep(10)
        
        lastCheck = GA.imgFind('lastConvoyCheck.png')
        if lastCheck is not None:
            pyautogui.press('esc')
            time.sleep(2)
            GA.mouseClick((1905,100))
            return True
        
        
        flagSS=True
        convoyLoop('ConvoySS.png',flagSS)
        
        time.sleep(5)
        
        GA.entrarEvento('ConvoyPlunderSelect1.png','ConvoyPlunderSelect2.png')
        GA.mouseClick(GA.imgFind('Participation.png'))    
        time.sleep(10)
        
        flagSS = False
        convoyLoop('ConvoyS.png',flagSS)
        
        time.sleep(5)
        
        GA.entrarEvento('ConvoyPlunderSelect1.png','ConvoyPlunderSelect2.png')
        GA.mouseClick(GA.imgFind('Participation.png'))    
        time.sleep(10)
        
        convoyLoop('ConvoyS.png',flagSS)
        
        time.sleep(5)
        GA.mouseClick(GA.mouseClick((1905,100)))    
    
    else:
        GA.mouseClick(GA.imgFind('CloseButton.png'))
    


import time
import pyautogui
import os
import UserConfigs as UC
os. chdir(UC.filePath)
import GeneralActions as GA
import Dicts as DICTS
import datetime

##Guild dono
def GuildDono(ryos):  #ex:'GuildDono('300000')
    GA.mouseClick(GA.imgFind('GroupButton.png'))
    time.sleep(2)
    GA.mouseClick(GA.imgFind('GuildDonoPage.png'))
    time.sleep(2)
    pos = (1216,517)
    GA.mouseClick(pos)    
    GA.write(ryos)
    GA.mouseClick(GA.imgFind('GuildDonate.png'))
    time.sleep(2)
    GA.mouseClick(GA.imgFind('CloseButton.png'))
    
##Rich Field

def RichField(lvlPos):
    GA.mouseClick(GA.mouseClick((1905,100)))
    time.sleep(2)
    GA.mouseClick(GA.imgFind('RichField.png'))
    ans = GA.imgFind('EnterRichField.png')
    
    while ans is None:
        ans = GA.imgFind('EnterRichField.png')
    GA.mouseClick(ans)
    time.sleep(2)
    GA.mouseClick(lvlPos)
    time.sleep(3)
    ans = GA.imgFind('ConfirmFimDeFase.png')
    while ans is None:
        GA.Auto2x()

        ans = GA.imgFind('ConfirmFimDeFase.png')
    GA.mouseClick(ans)

    time.sleep(20)

##Roleta

def Roleta(nbr):
    GA.mouseClick(GA.imgFind('GroupButton.png'))
    time.sleep(2)
    for _ in range(2):
        GA.mouseClick((1326,769))
        pyautogui.mouseDown()
        time.sleep(1)
        pyautogui.mouseUp()

        
    
    GA.mouseClick((1277,746))
    time.sleep(10)
    for _ in range(nbr):
        GA.mouseClick((743,545))
        time.sleep(10)
    GA.mouseClick(GA.imgFind('CloseRoleta.png'))
    time.sleep(2)
    GA.mouseClick(GA.mouseClick((1905,100)))
    
##sapinho
def sapinho():
    GA.mouseClick(GA.imgFind('TreinoDiario.png'))
    time.sleep(2)
    
    ans = GA.imgFind('sapinho100.png')
    if ans is not None:
        pyautogui.press('esc')
        return False
    
    GA.mouseClick((673,762))
    pyautogui.mouseDown()
    time.sleep(1)
    pyautogui.mouseUp()
    time.sleep(5)
    ans=GA.imgFind('levelupOkay.png')
    if ans is not None:
        GA.mouseClick(ans)
        ans = GA.imgFind('TreinoDiario.png')
        while ans is None:
            time.sleep(1)
            pyautogui.press('esc')
            time.sleep(1)
            ans = GA.imgFind('TreinoDiario.png')
                 
        GA.mouseClick(ans)
        
    GA.mouseClick((831,758))
    pyautogui.mouseDown()
    time.sleep(1)
    pyautogui.mouseUp()
    time.sleep(5)
    ans=GA.imgFind('levelupOkay.png')
    if ans is not None:
        GA.mouseClick(ans)
        ans = GA.imgFind('TreinoDiario.png')
        while ans is None:
            time.sleep(1)
            pyautogui.press('esc')
            time.sleep(1)
            ans = GA.imgFind('TreinoDiario.png')
                 
        GA.mouseClick(ans)
    
    GA.mouseClick((996,749))
    pyautogui.mouseDown()
    time.sleep(1)
    pyautogui.mouseUp()
    time.sleep(5)
    ans=GA.imgFind('levelupOkay.png')
    if ans is not None:
        GA.mouseClick(ans)
        ans = GA.imgFind('TreinoDiario.png')
        while ans is None:
            time.sleep(1)
            pyautogui.press('esc')
            time.sleep(1)
            ans = GA.imgFind('TreinoDiario.png')
                 
        GA.mouseClick(ans)
    
    GA.mouseClick((1158,765))
    pyautogui.mouseDown()
    time.sleep(1)
    pyautogui.mouseUp()
    time.sleep(5)
    ans=GA.imgFind('levelupOkay.png')
    if ans is not None:
        GA.mouseClick(ans)
        ans = GA.imgFind('TreinoDiario.png')
        while ans is None:
            time.sleep(1)
            pyautogui.press('esc')
            time.sleep(1)
            ans = GA.imgFind('TreinoDiario.png')
                 
        GA.mouseClick(ans)
    
    GA.mouseClick((1335,752))
    pyautogui.mouseDown()
    time.sleep(1)
    pyautogui.mouseUp()
    time.sleep(5)
    ans=GA.imgFind('levelupOkay.png')
    if ans is not None:
        GA.mouseClick(ans)
        ans = GA.imgFind('TreinoDiario.png')
        while ans is None:
            time.sleep(1)
            pyautogui.press('esc')
            time.sleep(1)
            ans = GA.imgFind('TreinoDiario.png')
        return True
        
    GA.mouseClick(GA.imgFind('CloseSapinho.png'))
    return True
#%%CheckIn
def checkIn():
    GA.mouseClick(GA.imgFind('DailyPractice.png'))
    time.sleep(2)
    ans1= GA.imgFind('DailyCheck1.png')
    ans2 = GA.imgFind('DailyCheck2.png')
    if ans1 is not None:
        
        GA.mouseClick(ans1)
    else: 
        GA.mouseClick(ans2)
    time.sleep(2)
    GA.mouseClick(GA.imgFind('Participation.png'))    
    time.sleep(2)
    ans = GA.imgFind('CheckinToday.png')
    while ans is None:
        ans = GA.imgFind('CheckinToday.png')
    GA.mouseClick(ans)
#%%OnlinePack
def OnlinePack():
    GA.mouseClick(GA.imgFind('OnlinePack.png'))
    for _ in range (3):
        time.sleep(2)
        GA.mouseClick(GA.imgFind('OnlinePackClaim.png'))
    time.sleep(2)

    GA.mouseClick(GA.imgFind('CloseHall.png'))
#%%Arena
def EnterArena():
    GA.mouseClick(GA.imgFind('Arena.png'))     
    time.sleep(2)
    pyautogui.moveTo((489,556))
    time.sleep(2)
    pyautogui.click()
    time.sleep(2)
    GA.mouseClick(GA.imgFind('ArenaTaskConfirm.png'))  
    time.sleep(2)
    pyautogui.moveTo((501,696))
    time.sleep(1)
    pyautogui.click()
    time.sleep(2)
    GA.mouseClick(GA.imgFind('ArenaTaskConfirm.png'))  
    time.sleep(2)
    
def ArenaLoop(nbr):
    for _ in range(nbr):
        
        
        ans = GA.mouseClick(GA.imgFind('ranqueadaArena.png')) 
        
        GA.mouseClick(ans)
        
        ans = GA.imgFind('confirmarVitoria.png')
        ans2 = GA.imgFind('confirmarDerrota.png')
        
        while (ans  is None) and (ans2 is None):
            GA.Auto2x()
            ans = GA.imgFind('confirmarVitoria.png')
            ans2 = GA.imgFind('confirmarDerrota.png')
                  
        GA.mouseClick(ans)
        GA.mouseClick(ans2)

        time.sleep(3)
       # ans1 = GA.imgFind('ConfirmArena.png')
        ans2 = GA.imgFind('confirmarArenaRankDown.png')
        ans3 = GA.imgFind('confirmarArenaRankUp.png')
        '''
        if ans1 is not None:
            GA.mouseClick(ans1)
        '''
        if ans2 is not None:
            GA.mouseClick(ans2)
        if ans3 is not None:
            GA.mouseClick(ans3)
                
        '''
        time.sleep(2)
        pyautogui.moveTo((489,556))
        time.sleep(2)
        pyautogui.click()
        time.sleep(2)
        GA.mouseClick(GA.imgFind('ArenaTaskConfirm.png'))  
        time.sleep(2)
        pyautogui.moveTo((501,696))
        time.sleep(1)
        pyautogui.click()
        time.sleep(2)
        GA.mouseClick(GA.imgFind('ArenaTaskConfirm.png'))  
        time.sleep(2)
        '''
    GA.mouseClick(GA.imgFind('CloseArena.png')) 
    pyautogui.press('esc')
#%%FreeTreasures
def recruit(nbr):#nbr of chests
    GA.mouseClick(GA.imgFind('recruit.png'))    
    time.sleep(4)
    #bond treasure
    
    ans=GA.imgFind('BondTreasureFree.png')
    if ans is not None:
        pyautogui.moveTo(ans)
        time.sleep(2)
        pyautogui.moveRel(-1180+1138, -646+704)
        time.sleep(2)
        pyautogui.click()
        time.sleep(1)
        pyautogui.press('esc')  
    time.sleep(2)
    
    #SealTreasure
    ans=GA.imgFind('SealTreasureFree.png')
    if ans is not None:
        pyautogui.moveTo(ans)
        time.sleep(2)
        pyautogui.moveRel(-1180+1138, -646+704)
        time.sleep(2)
        pyautogui.click()
        time.sleep(1)
        pyautogui.press('esc')  
    
    #TendoTreasure
    ans=GA.imgFind('tendoFree.png')
    if ans is not None:
        pyautogui.moveTo(ans)
        time.sleep(2)
        pyautogui.moveRel(-1180+1138, -646+704)
        time.sleep(2)
        pyautogui.click()
        time.sleep(1)
        pyautogui.press('esc')      
    
    
    #end
    time.sleep(3)
    pyautogui.press('esc')  
#%%NinjaExam
def NinjaExam():
    GA.mouseClick(GA.imgFind('NinjaExam.png'))
    time.sleep(5)
    
    GA.mouseClick(GA.imgFind('NinjaExamReset.png'))
    time.sleep(3)
    
    GA.mouseClick(GA.imgFind('NinjaExamResetConfirm.png'))
    time.sleep(3)

    GA.mouseClick(GA.imgFind('NinjaExamSweep.png'))
    time.sleep(3)

    GA.mouseClick(GA.imgFind('NinjaExamQuickSweep.png'))
    
    ans = GA.imgFind('NinjaExamCompleteSweep.png')
    while ans is None:
        ans = GA.imgFind('NinjaExamCompleteSweep.png')
    
    GA.mouseClick(ans)
    time.sleep(3)
    pyautogui.press('esc')
    
#%%Lucky Runes
def LuckyRunes():
    GA.mouseClick(GA.imgFind('LuckyRunes.png'))
    time.sleep(5)
    
    for _ in range (4):
        GA.mouseClick(GA.imgFind('LuckyRunesLucky.png'))
        pyautogui.mouseDown()
        time.sleep(1)
        pyautogui.mouseUp()
        time.sleep(2)
    pyautogui.press('esc')

#%%ExpTreasure
def ExpTreasure(fase):
    
    for _ in range(4):   
    
        GA.mouseClick(GA.mouseClick((1905,100)))
        time.sleep(5)
        GA.mouseClick(GA.imgFind('RichField.png'))
        time.sleep(5)
        GA.mouseClick(GA.imgFind('EnterExpTreasure.png'))
        time.sleep(3)
        
        GA.mouseClick(fase)
        
        time.sleep(1)
        startExpTreasure = GA.imgFind('ExpTreasureShukakuStart.png')
        GA.mouseClick(startExpTreasure)
        
        time.sleep(5)
        
        startExpTreasure = GA.imgFind('ExpTreasureShukakuStart.png')
        if startExpTreasure is not None:
            pyautogui.press('esc')
            return True
        
        
        ans = GA.imgFind('confirmarVitoria.png')
        while ans is None:
            ans = GA.imgFind('confirmarVitoria.png')
            GA.Auto2x()
        GA.mouseClick(ans)
        time.sleep(2)
        GA.mouseClick(ans)
        
        time.sleep(4)
        
        ans=GA.imgFind('levelupOkay.png')
        if ans is not None:
            GA.mouseClick(ans)
            time.sleep(1)
            ans = GA.imgFind('TreinoDiario.png')
            while ans is None:
                time.sleep(1)
                pyautogui.press('esc')
                time.sleep(1)
                ans = GA.imgFind('TreinoDiario.png')
                
    pyautogui.press('esc')

    
#%%NinjaTest

def NinjaTest():
    GA.mouseClick(GA.mouseClick((1905,100)))
    time.sleep(5)
    
    GA.mouseClick(GA.imgFind('DailyPractice.png'))
    time.sleep(2)
    ans1 = GA.imgFind('NinjaTestSelect1.png')
    ans2 = GA.imgFind('NinjaTestSelect2.png')

    if ans1 is not None:
        pos = ans1  
        GA.mouseClick(pos)
        
    else: 
        pos = ans2
            
        GA.mouseClick(pos)
    
    time.sleep(2)
    GA.mouseClick(GA.imgFind('Participation.png'))    
    ans = GA.imgFind('NinjaTesteStartTest.png')
    while ans is None:
        ans = GA.imgFind('NinjaTesteStartTest.png')
    GA.mouseClick(ans)
    
    for _ in range(10):
        time.sleep(7)
        GA.mouseClick((938,603))
        time.sleep(2)
        GA.mouseClick(GA.imgFind('NinjaTestSubmit.png'))
        
    time.sleep(5)

    GA.mouseClick(GA.imgFind('NinjaTestClaim.png'))
    time.sleep(1)
    pyautogui.press('esc')
    #%%
def SurvivalTrial(points):
    survCount=0
    
    GA.mouseClick(GA.imgFind('SurvivalTrial.png'))

    time.sleep(5)
   
    ans = GA.imgFind('SurvivalTrialReset.png')
    
    GA.mouseClick(ans)

    GA.mouseClick((1020,963))
    
    time.sleep(3)
    
    for SurvivalB in range (3):
        
        if survCount>=points:
            break
        
        GA.mouseClick((1114,557))
        ans = GA.imgFind('SurvivalTrialBattle.png')
        while ans is None:
            ans = GA.imgFind('SurvivalTrialBattle.png')
           
        time.sleep(1)
        
        for i in range(1,5):
            
            img = 'SurvivalTrialDead' + str(i) + '.png'
            checkDead = GA.imgFind(img)
    
            if checkDead is not None:
                SurvivalTrialDead()
                break
        
        time.sleep(2)
                    
        GA.mouseClick(ans)
        ans = GA.imgFind('SurvivalTrialBattleEnd.png')
        while ans is None:
            ans = GA.imgFind('SurvivalTrialBattleEnd.png')
            GA.Auto2x()
        GA.mouseClick(ans)
        time.sleep(3)
        survCount+=20
    
    for SurivvalC in range (5):
        
        if survCount>=points:
            break
        
        GA.mouseClick((1074,688))
        ans = GA.imgFind('SurvivalTrialBattle.png')
        while ans is None:
            ans = GA.imgFind('SurvivalTrialBattle.png')
        
        time.sleep(1)
        
        for i in range(1,5):
            
            img = 'SurvivalTrialDead' + str(i) + '.png'
            checkDead = GA.imgFind(img)
    
            if checkDead is not None:
                SurvivalTrialDead()
                break
        
        time.sleep(2)
        
        GA.mouseClick(ans)
        ans = GA.imgFind('SurvivalTrialBattleEnd.png')
        while ans is None:
            ans = GA.imgFind('SurvivalTrialBattleEnd.png')
            GA.Auto2x()
        GA.mouseClick(ans)
        time.sleep(3)
        survCount+=10

    for SurivvalA in range (2):
        
        if survCount>=points:
            break
        
        GA.mouseClick((815,525))
        ans = GA.imgFind('SurvivalTrialBattle.png')
        while ans is None:
            ans = GA.imgFind('SurvivalTrialBattle.png')
        
        time.sleep(1)
        
        for i in range(1,5):
            
            img = 'SurvivalTrialDead' + str(i) + '.png'
            checkDead = GA.imgFind(img)
    
            if checkDead is not None:
                SurvivalTrialDead()
                break
        
        time.sleep(2)
        
        GA.mouseClick(ans)
        ans = GA.imgFind('SurvivalTrialBattleEnd.png')
        while ans is None:
            ans = GA.imgFind('SurvivalTrialBattleEnd.png')
            GA.Auto2x()
        GA.mouseClick(ans)
        time.sleep(3)
        survCount+=30
    
    
    time.sleep(3)
    GA.mouseClick((1430,909))#reward claim
   
    time.sleep(3)
    GA.mouseClick((873,595))
    
    pyautogui.press('esc')
    time.sleep(1)
    pyautogui.press('esc')    
def SurvivalTrialDead():
        for key in DICTS.posLuta:
            
            pyautogui.moveTo(DICTS.posLuta[key])
            time.sleep(1)
            pyautogui.mouseDown()
            time.sleep(1)
            pyautogui.moveTo(977,189)
            time.sleep(1)
            pyautogui.mouseUp()
            time.sleep(1)
        
        pyautogui.moveTo(977,189)
        time.sleep(1)
        pyautogui.mouseDown()
        time.sleep(1)
        pyautogui.moveTo(DICTS.posLuta['12']) 
        time.sleep(1)
        pyautogui.mouseUp()
        time.sleep(1)
        
        pyautogui.moveTo(977,189)
        time.sleep(1)
        pyautogui.mouseDown()
        time.sleep(1)
        pyautogui.moveTo(DICTS.posLuta['22']) 
        time.sleep(1)
        pyautogui.mouseUp()
        time.sleep(1)
        
        pyautogui.moveTo(977,189)
        time.sleep(1)
        pyautogui.mouseDown()
        time.sleep(1)
        pyautogui.moveTo(DICTS.posLuta['32']) 
        time.sleep(1)
        pyautogui.mouseUp()
        time.sleep(1)
        
        pyautogui.moveTo(977,189)
        time.sleep(1)
        pyautogui.mouseDown()
        time.sleep(1)
        pyautogui.moveTo(DICTS.posLuta['21']) 
        time.sleep(1)
        pyautogui.mouseUp()
        time.sleep(1)

def onsen():
    GA.mouseClick(GA.imgFind('DailyPractice.png'))
    time.sleep(2)
    ans1 = GA.imgFind('Onsen1.png')
    ans2 = GA.imgFind('Onsen2.png')  
    
    if (ans1 is None) and ( ans2 is None):
        pyautogui.press('esc')
        return True
    
    if ans1 is not None:
        pos = ans1  
        GA.mouseClick(pos)
        
    else: 
        pos = ans2
            
        GA.mouseClick(pos)
    
    GA.mouseClick(GA.imgFind('Participation.png'))    
    time.sleep(5)
    GA.mouseClick((1072,223))
    time.sleep(6)
    ans = GA.imgFind('onsenBath.png')
    ans2 = GA.imgFind('onsenBathEnd.png')
    
    if ans is not None:
        GA.mouseClick(ans)
        time.sleep(60*5)
    
    if ans2 is not None:
        return True
    
    pyautogui.press('esc')
    time.sleep(2)
    GA.mouseClick(GA.mouseClick((1905,100)))
    
#%%

def ilusao():
    
    GA.mouseClick(GA.imgFind('ilusao.png'))
    time.sleep(2)
    ans = GA.imgFind('checkIlusao.png')
    if ans is None:

    
        GA.mouseClick((627,231))
        time.sleep(1)
        for _ in range(2):
            GA.mouseClick((1423,892))
            time.sleep(1)

            ans = GA.imgFind('ilusaoConfirm.png')

            if ans is not None:
                GA.mouseClick(ans)
                        
            pyautogui.press('esc')
            time.sleep(1)

        GA.mouseClick((717,231))
        time.sleep(1)
        for _ in range(2):
            GA.mouseClick((1423,892))
            time.sleep(1)
            ans = GA.imgFind('ilusaoConfirm.png')

            if ans is not None:
                GA.mouseClick(ans)
            
            pyautogui.press('esc')
            time.sleep(1)

        GA.mouseClick((817,231))
        time.sleep(1)
        for _ in range(2):
            GA.mouseClick((1423,892))
            time.sleep(1)
            ans = GA.imgFind('ilusaoConfirm.png')

            if ans is not None:
                GA.mouseClick(ans)
            pyautogui.press('esc')
            time.sleep(1)
    pyautogui.press('esc')
    
def cave():
     GA.mouseClick(GA.imgFind('Cave.png'))
     time.sleep(2)
     ans  = GA.imgFind('CaveFree.png')
     if ans is not None:
         GA.mouseClick(ans)
     pyautogui.press('esc')
     return True

def gato(hora,minutos):
    if (hora == 22) and (minutos >10) and (minutos <15):
    
        GA.entrarEvento('gato.png','gato2.png')
        GA.mouseClick(GA.imgFind('Participation.png'))   
        ans = GA.imgFind('gatoSplash.png')
        while ans is None:
            ans = GA.imgFind('gatoSplash.png')
        GA.mouseClick((903,583))
        ans = GA.imgFind('gatoSupport.png')
        while ans is None:
            ans = GA.imgFind('gatoSupport.png')
        GA.mouseClick(ans)
        ans = GA.imgFind('gatoSupportConfirm.png')
        while ans is None:
            ans = GA.imgFind('gatoSupportConfirm.png')
        GA.mouseClick(ans)
        ans = GA.imgFind('gatoSignup.png')
        while ans is None:
            ans = GA.imgFind('gatoSignup.png')
        GA.mouseClick(ans)
        time.sleep(1)
        GA.mouseClick(ans)
        time.sleep(5)
        pyautogui.moveTo(1819,102)
        GA.mouseClick((1819,102))
        time.sleep(5)
        GA.mouseClick((1373,561))
        
        time.sleep(60*10)
        
        os.system('shutdown /s /t 1')

def bds(hora,minutos):
    if (hora == 21) and (minutos >30) and (minutos <40):
        GA.entrarEvento('sage1.png','sage2.png')
        GA.mouseClick(GA.imgFind('Participation.png')) 
        time.sleep(3)
        pyautogui.moveTo(959,788)
        GA.mouseClick((959,788))
        time.sleep(3)
        GA.mouseClick((1242,784))
        
        while (minutos <41):
            minutos = datetime.datetime.now().minute
        
        flop = GA.imgFind('DailyPractice.png')
        if flop is not None:
            return True
        
        while (hora != 22) and (minutos <7):
        
            ans1 = GA.imgFind('bdsLoose.png')
            ans2 = GA.imgFind('SurvivalTrialBattleEnd.png')
            while (ans1 is None) and (ans2 is None):
                ans1 = GA.imgFind('bdsLoose.png')
                ans2 = GA.imgFind('SurvivalTrialBattleEnd.png')
                GA.Auto2x()
            GA.mouseClick(ans1)
            GA.mouseClick(ans2)
    
            hora = GA.checkHour()
            minutos = datetime.datetime.now().minute

        for _ in range(10):
        
            pyautogui.press('esc')
            time.sleep(2)
def freeSummon():
    GA.mouseClick(GA.imgFind('PowerUp.png'))
    time.sleep(1)
    GA.mouseClick(GA.imgFind('Summons.png'))
    
    time.sleep(1)
    GA.mouseClick(GA.imgFind('SummonsSummon.png'))
       
    time.sleep(3)
    
    ans = GA.imgFind('summonFree.png')
    
    if ans is None:
        pyautogui.press('esc')
        return True
     
    
    pyautogui.moveTo(ans)
    time.sleep(2)
    pyautogui.moveRel(-838+771, -711+784)
    time.sleep(2)
    pyautogui.click()
    time.sleep(1)
    pyautogui.press('esc')

    time.sleep(1)
    pyautogui.press('esc')
    
    return True
    

def ggn():
    GA.entrarEvento('ggn.png','ggn2.png')
    GA.mouseClick(GA.imgFind('Participation.png')) 
    ans = GA.imgFind('ggnAnbu.png')
    while ans is None:
        ans = GA.imgFind('ggnAnbu.png')
    pyautogui.moveTo(957,579)
    time.sleep(1)
    GA.mouseClick((957,579))
    time.sleep(3)
    pyautogui.moveTo(852,370)
    time.sleep(1)
    GA.mouseClick((852,370))
    ans = GA.imgFind('ggnClosed.png')
    while ans is None:
        GA.Auto2x()
        ans = GA.imgFind('ggnClosed.png')
    pyautogui.moveTo(1635,132)
    time.sleep(1)
    GA.mouseClick((1635,132))
    
    

posLuta = {
    
    '31' : (597,690),
    '32' : (686,690),
    '33' : (794,690),
    
    '21' : (597,635),
    '22' : (686,635),
    '23' : (794,635),
    
    '11' : (597,599),
    '12' : (686,599),
    '13' : (794,599),
    
    }

TeamInstances={
    'Haku' : (738,539),
    'Gaara' : (1134,539),


    
    'Hard' : 0,
    'Normal' : 1,
    'Easy' : 2,
    
    
    }

ExpTreasure ={
    'Shukaku' : (690,393),
    'Orochi' : (778,393),
    'Sakura' : (870,393),
    
    }

RichField = {
    'Easy': (722,467),
    'Normal': (959,467)
    
    }

import time
import os 
import pyautogui
import UserConfigs as UC
os. chdir(UC.filePath)
import GeneralActions as GA

#eventos False se ainda precisa fazer


def checkConvoy():
    GA.entrarEvento('ConvoyPlunderSelect1.png','ConvoyPlunderSelect2.png')
    time.sleep(3)
    check = GA.imgFind('RewardingAttempts3.png')
    check2 = GA.imgFind('convoyCheck2.png')
    if (check2 is None) and (check is None):
        pyautogui.press('esc')
        return False
    pyautogui.press('esc')
    return True

def checkTI():
    GA.entrarEvento('TeamInstanceSelect1.png','TeamInstanceSelect2.png')
    time.sleep(3)
    check = GA.imgFind('RewardingAttempts5.png')
    check2 = GA.imgFind('RewardingAttempts5_1.png')
    check3 = GA.imgFind('checkTI1.png')
    check4 = GA.imgFind('actCheckTI.png')
    
    if (check is None) and (check2 is None) and (check3 is not None) and (check4 is not None):
        pyautogui.press('esc')
        return False
    else:
        pyautogui.press('esc')
        return True

def checkRichField():
    GA.mouseClick(GA.mouseClick((1905,100)))
    time.sleep(2)
    GA.mouseClick(GA.imgFind('RichField.png'))
    ans = GA.imgFind('EnterRichField.png')
    while ans is None:
        ans = GA.imgFind('EnterRichField.png')
    GA.mouseClick(ans)
    time.sleep(2)
    check = GA.imgFind('RichFieldCheck.png')
    if check is None:
        pyautogui.press('esc')
        return False
    else:
        pyautogui.press('esc')
        return True

def checkExpTreasure():
    GA.mouseClick(GA.mouseClick((1905,100)))
    time.sleep(2)
    GA.mouseClick(GA.imgFind('RichField.png'))
    ans = GA.imgFind('EnterExpTreasure.png')
    while ans is None:
        ans = GA.imgFind('EnterExpTreasure.png')
    GA.mouseClick(ans)
    time.sleep(2)
    check = GA.imgFind('ExpTreasureCheck.png')
    check2 = GA.imgFind('ExpTreasureCheck2.png')
    if (check is None) and (check2 is None):
        pyautogui.press('esc')
        return False
    else:
        pyautogui.press('esc')
        return True

def checkDailyPractice(img1,img2):
    GA.mouseClick(GA.imgFind('DailyPractice.png'))
    time.sleep(2)
    ans1 = GA.imgFind(img1)
    ans2 = GA.imgFind(img2)
    
    if (ans1 is None) and (ans2 is None):
        pos =  (1078,705)
    
        pyautogui.moveTo(pos)
        time.sleep(1)
        #pyautogui.click()
        
        pyautogui.mouseDown()
        time.sleep(0.05)
    
        pyautogui.mouseUp()
        
    time.sleep(2)

    ans1 = GA.imgFind(img1)
    ans2 = GA.imgFind(img2)         
    
    if (ans1 is None) and (ans2 is None):
        pyautogui.press('esc')
        return False
    else:
        pyautogui.press('esc')
        return True

def checkMatsuri():
    GA.entrarEvento('MatsiruCheck1.png','MatsiruCheck2.png')
    time.sleep(3)
    check = GA.imgFind('checkMitsuri.png')
    if check is None:
        pyautogui.press('esc')
        return False
    else:
        pyautogui.press('esc')
        return True

def checkMatsuri2():
    GA.entrarEvento('Matsuri2Check1.png','Matsuri2Check2.png')
    time.sleep(3)
    check = GA.imgFind('checkMitsuri.png')
    if check is None:
        pyautogui.press('esc')
        return False
    else:
        pyautogui.press('esc')
        return True

#%%

import datetime
import pyautogui
import time
import os 
import UserConfigs as UC
os. chdir(UC.filePath)

def checkHour():
    e = datetime.datetime.now()
    hora=e.hour
    return hora

def mouseClick(pos):
    pyautogui.click(pos, duration = 0.5)
    
def imgFind(img):
    ans = pyautogui.locateCenterOnScreen(img) #return(x,y) or None
    return ans

def abaEventos():
    mouseClick((100,220))
    pyautogui.mouseDown()
    time.sleep(2)
    
    pyautogui.mouseUp()

def write(word):
    pyautogui.write(word)  

def entrarEvento(img1,img2): #('','')
    abaEventos()
    
    time.sleep(2)
    

    ans1 = imgFind(img1)
    ans2 = imgFind(img2)
    
    if (ans1 is None) and (ans2 is None):
        pos =  (1078,705)
    
        pyautogui.moveTo(pos)
        time.sleep(1)
        #pyautogui.click()
        
        pyautogui.mouseDown()
        time.sleep(0.05)
    
        pyautogui.mouseUp()
        
    time.sleep(2)

    ans1 = imgFind(img1)
    ans2 = imgFind(img2)         
    
    if ans1 is not None:
        pos = ans1  
        mouseClick(pos)
        
    else: 
        pos = ans2
            
        mouseClick(pos)


    
    time.sleep(1)    
    '''
    
    if first == True:
        
        ready = imgFind(actPoint)
    
    else:
    
    ready = imgFind(actPoint)
    '''
    ready = True
    return ready

def Auto2x():
    ans = imgFind('FindAuto.png')
    if ans is not None:
        mouseClick(ans)
    ans =  imgFind('FindX1Speed.png')
    if ans is not None:
        mouseClick(ans)
#%%
def replaceConfigs(search,replace):
    with open('UserConfigs.py', 'r') as file :
      filedata = file.read()
    
    # Replace the target string
    filedata = filedata.replace(search, replace)
    
    # Write the file out again
    with open('UserConfigs.py', 'w') as file:
      file.write(filedata)
